// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.Api.Data;

#nullable disable

namespace ShopOnline.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57231904-1a9b-40e6-aa24-2b553dfff1b0"),
                            UserId = new Guid("aca965a5-2f95-4ead-b00d-25725191bf3e")
                        },
                        new
                        {
                            Id = new Guid("bbba4eac-1059-4e87-bab6-03c8dc987b31"),
                            UserId = new Guid("0fbb2ddf-3d17-443b-a2ef-7193321a4058")
                        },
                        new
                        {
                            Id = new Guid("81f68227-7f88-41ef-b4ba-bfa82974c875"),
                            UserId = new Guid("74076fe3-548f-440c-aa95-7c5946b7964f")
                        },
                        new
                        {
                            Id = new Guid("9bdf513e-91b0-4994-bc6e-4c7da68c01ba"),
                            UserId = new Guid("10d98ec0-90ec-4f7a-be9a-781eb2561a0b")
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("188dd069-813e-48df-9af8-b6b71ce616de"),
                            CategoryId = new Guid("1d2d2635-8e2d-48ef-b515-2f9a10e6ac99"),
                            Description = "Description for Product1",
                            ImageUrl = "Image1.png",
                            Name = "Product1",
                            Price = 11.99m,
                            QuantityInStock = 51
                        },
                        new
                        {
                            Id = new Guid("1af2dd61-0332-49c3-8a83-3d9bd477d85c"),
                            CategoryId = new Guid("bcb593f3-d55e-4741-b1ce-9d0ae81a0fba"),
                            Description = "Description for Product2",
                            ImageUrl = "Image2.png",
                            Name = "Product2",
                            Price = 12.99m,
                            QuantityInStock = 52
                        },
                        new
                        {
                            Id = new Guid("b2196f0f-9bf6-49c6-baaa-4819be92796a"),
                            CategoryId = new Guid("c57b8a61-9eb4-4879-afba-aaf104363736"),
                            Description = "Description for Product3",
                            ImageUrl = "Image3.png",
                            Name = "Product3",
                            Price = 13.99m,
                            QuantityInStock = 53
                        },
                        new
                        {
                            Id = new Guid("9e638083-06d5-4ef0-8646-8d736f402fbc"),
                            CategoryId = new Guid("26e89824-bc11-4d57-9caf-4c56a9fe1053"),
                            Description = "Description for Product4",
                            ImageUrl = "Image4.png",
                            Name = "Product4",
                            Price = 14.99m,
                            QuantityInStock = 54
                        },
                        new
                        {
                            Id = new Guid("ec9ef09c-9f31-4f7a-8a69-11be86e3422d"),
                            CategoryId = new Guid("4e40e13d-a415-4e61-9709-614caae50788"),
                            Description = "Description for Product5",
                            ImageUrl = "Image5.png",
                            Name = "Product5",
                            Price = 15.99m,
                            QuantityInStock = 55
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed6439e9-5944-4e66-8d5c-aa72dc841215"),
                            Description = "Description for Category1",
                            Name = "Category1"
                        },
                        new
                        {
                            Id = new Guid("a40b943e-a36a-441a-9300-a3ebbdfea2af"),
                            Description = "Description for Category2",
                            Name = "Category2"
                        },
                        new
                        {
                            Id = new Guid("86fe484d-ce15-4aa7-8602-e5a0aebce749"),
                            Description = "Description for Category3",
                            Name = "Category3"
                        },
                        new
                        {
                            Id = new Guid("fa205792-e69e-4e43-9eac-9c20069db346"),
                            Description = "Description for Category4",
                            Name = "Category4"
                        },
                        new
                        {
                            Id = new Guid("f870a658-1ed2-49f8-8857-641158020c8b"),
                            Description = "Description for Category5",
                            Name = "Category5"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aca965a5-2f95-4ead-b00d-25725191bf3e"),
                            Username = "User1"
                        },
                        new
                        {
                            Id = new Guid("0fbb2ddf-3d17-443b-a2ef-7193321a4058"),
                            Username = "User2"
                        },
                        new
                        {
                            Id = new Guid("74076fe3-548f-440c-aa95-7c5946b7964f"),
                            Username = "User3"
                        },
                        new
                        {
                            Id = new Guid("10d98ec0-90ec-4f7a-be9a-781eb2561a0b"),
                            Username = "User4"
                        },
                        new
                        {
                            Id = new Guid("c0ea0ba0-4971-4aad-9fa3-2cc9366478b8"),
                            Username = "User5"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.CartItem", b =>
                {
                    b.HasOne("ShopOnline.Api.Models.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.Api.Models.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.ProductCategory", b =>
                {
                    b.HasOne("ShopOnline.Api.Models.Entities.ProductCategory", "ParentCategory")
                        .WithMany("Children")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ShopOnline.Api.Models.Entities.ProductCategory", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
